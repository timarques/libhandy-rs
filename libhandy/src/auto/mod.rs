// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

mod action_row;
pub use self::action_row::{ActionRow, ActionRowClass, NONE_ACTION_ROW};
pub use self::action_row::ActionRowExt;

mod arrows;
pub use self::arrows::{Arrows, ArrowsClass, NONE_ARROWS};
pub use self::arrows::ArrowsExt;

mod column;
pub use self::column::{Column, ColumnClass, NONE_COLUMN};
pub use self::column::ColumnExt;

#[cfg(any(feature = "v0_0_6", feature = "dox"))]
mod combo_row;
#[cfg(any(feature = "v0_0_6", feature = "dox"))]
pub use self::combo_row::{ComboRow, ComboRowClass, NONE_COMBO_ROW};
#[cfg(any(feature = "v0_0_6", feature = "dox"))]
pub use self::combo_row::ComboRowExt;

mod dialer;
pub use self::dialer::{Dialer, DialerClass, NONE_DIALER};
pub use self::dialer::DialerExt;

mod dialer_button;
pub use self::dialer_button::{DialerButton, DialerButtonClass, NONE_DIALER_BUTTON};
pub use self::dialer_button::DialerButtonExt;

mod dialer_cycle_button;
pub use self::dialer_cycle_button::{DialerCycleButton, DialerCycleButtonClass, NONE_DIALER_CYCLE_BUTTON};
pub use self::dialer_cycle_button::DialerCycleButtonExt;

#[cfg(any(feature = "v0_0_7", feature = "dox"))]
mod dialog;
#[cfg(any(feature = "v0_0_7", feature = "dox"))]
pub use self::dialog::{Dialog, DialogClass, NONE_DIALOG};

mod expander_row;
pub use self::expander_row::{ExpanderRow, ExpanderRowClass, NONE_EXPANDER_ROW};
pub use self::expander_row::ExpanderRowExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod header_bar;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::header_bar::{HeaderBar, HeaderBarClass, NONE_HEADER_BAR};
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::header_bar::HeaderBarExt;

mod header_group;
pub use self::header_group::{HeaderGroup, HeaderGroupClass, NONE_HEADER_GROUP};
pub use self::header_group::HeaderGroupExt;

mod leaflet;
pub use self::leaflet::{Leaflet, LeafletClass, NONE_LEAFLET};
pub use self::leaflet::LeafletExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod preferences_group;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_group::{PreferencesGroup, PreferencesGroupClass, NONE_PREFERENCES_GROUP};
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_group::PreferencesGroupExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod preferences_page;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_page::{PreferencesPage, PreferencesPageClass, NONE_PREFERENCES_PAGE};
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_page::PreferencesPageExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod preferences_row;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_row::{PreferencesRow, PreferencesRowClass, NONE_PREFERENCES_ROW};
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_row::PreferencesRowExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod preferences_window;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::preferences_window::{PreferencesWindow, PreferencesWindowClass, NONE_PREFERENCES_WINDOW};

#[cfg(any(feature = "v0_0_6", feature = "dox"))]
mod search_bar;
#[cfg(any(feature = "v0_0_6", feature = "dox"))]
pub use self::search_bar::{SearchBar, SearchBarClass, NONE_SEARCH_BAR};
#[cfg(any(feature = "v0_0_6", feature = "dox"))]
pub use self::search_bar::SearchBarExt;

mod squeezer;
pub use self::squeezer::{Squeezer, SqueezerClass, NONE_SQUEEZER};
pub use self::squeezer::SqueezerExt;

mod title_bar;
pub use self::title_bar::{TitleBar, TitleBarClass, NONE_TITLE_BAR};
pub use self::title_bar::TitleBarExt;

#[cfg(any(feature = "v0_0_8", feature = "dox"))]
mod value_object;
#[cfg(any(feature = "v0_0_8", feature = "dox"))]
pub use self::value_object::{ValueObject, ValueObjectClass, NONE_VALUE_OBJECT};
#[cfg(any(feature = "v0_0_8", feature = "dox"))]
pub use self::value_object::ValueObjectExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod view_switcher;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::view_switcher::{ViewSwitcher, ViewSwitcherClass, NONE_VIEW_SWITCHER};
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::view_switcher::ViewSwitcherExt;

#[cfg(any(feature = "v0_0_10", feature = "dox"))]
mod view_switcher_bar;
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::view_switcher_bar::{ViewSwitcherBar, ViewSwitcherBarClass, NONE_VIEW_SWITCHER_BAR};
#[cfg(any(feature = "v0_0_10", feature = "dox"))]
pub use self::view_switcher_bar::ViewSwitcherBarExt;

mod enums;
pub use self::enums::ArrowsDirection;
pub use self::enums::CenteringPolicy;
pub use self::enums::Fold;
pub use self::enums::LeafletChildTransitionType;
pub use self::enums::LeafletModeTransitionType;
pub use self::enums::SqueezerTransitionType;
pub use self::enums::ViewSwitcherPolicy;

#[doc(hidden)]
pub mod traits {
    pub use super::ActionRowExt;
    pub use super::ArrowsExt;
    pub use super::ColumnExt;
    #[cfg(any(feature = "v0_0_6", feature = "dox"))]
    pub use super::ComboRowExt;
    pub use super::DialerExt;
    pub use super::DialerButtonExt;
    pub use super::DialerCycleButtonExt;
    pub use super::ExpanderRowExt;
    #[cfg(any(feature = "v0_0_10", feature = "dox"))]
    pub use super::HeaderBarExt;
    pub use super::HeaderGroupExt;
    pub use super::LeafletExt;
    #[cfg(any(feature = "v0_0_10", feature = "dox"))]
    pub use super::PreferencesGroupExt;
    #[cfg(any(feature = "v0_0_10", feature = "dox"))]
    pub use super::PreferencesPageExt;
    #[cfg(any(feature = "v0_0_10", feature = "dox"))]
    pub use super::PreferencesRowExt;
    #[cfg(any(feature = "v0_0_6", feature = "dox"))]
    pub use super::SearchBarExt;
    pub use super::SqueezerExt;
    pub use super::TitleBarExt;
    #[cfg(any(feature = "v0_0_8", feature = "dox"))]
    pub use super::ValueObjectExt;
    #[cfg(any(feature = "v0_0_10", feature = "dox"))]
    pub use super::ViewSwitcherExt;
    #[cfg(any(feature = "v0_0_10", feature = "dox"))]
    pub use super::ViewSwitcherBarExt;
}
